services:
   # grafana
  #
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    #restart: always
    ports:
      - "3006:3000" # Map host port 3006 to container port 3000
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    volumes:
      - ./monitoring-and-observability/01-grafana/provisioning:/etc/grafana/provisioning
      - grafana-vol:/var/lib/grafana
    networks:
      - data-ops-network
  # prometheus
  #
  prometheus:
    #image: prom/prometheus
    image: prom/prometheus:latest
    container_name: prometheus
    #restart: always
    ports:
      - "${PROMETHEUS_PORT}:${PROMETHEUS_PORT}"
    volumes:
      - ./monitoring-and-observability/02-prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-vol:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    networks:
      - data-ops-network
  # loki
  #
  loki:
    image: grafana/loki:2.9.14
    container_name: loki
    ports:
      - "${LOKI_PORT}:${LOKI_PORT}"
    volumes:
      - ./monitoring-and-observability/03-loki/loki-config.yaml:/etc/loki/loki-config.yaml
      - loki-vol:/loki
    command:
      - "-config.file=/etc/loki/loki-config.yaml"
  # postgres-db-exporter
  #
  postgres-db-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: postgres-db-exporter
    #restart: always
    ports:
      - "9187:9187"
    environment:
      DATA_SOURCE_NAME: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres-db:5432/postgres?sslmode=disable"
    depends_on:
      - postgres-db
    networks:
      - data-ops-network
################################ Networks ############################################
networks:
  data-ops-network:
    external: true # Use the existing network from docker-compose.yml

################################ Volumes ############################################
volumes:
  grafana-vol:
  prometheus-vol:
  loki-vol:
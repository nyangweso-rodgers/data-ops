############################## Workflow Orchestrator - Dagster ##############################################
services:
  # dagster-webserver
  #
  dagster-webserver:
    build:
      context: .
      dockerfile: Dockerfile
    image: dagster
    container_name: dagster-webserver
    ports:
      - "3004:3004"
    #command: ["dagster-webserver", "-h", "0.0.0.0", "-p", "3004", "--code-server-host", "dagster", "--code-server-port", "4000"]
    command:
      [
        "dagster-webserver",
        "-h",
        "0.0.0.0",
        "-p",
        "3004",
        "-w",
        "/app/dagster_home/workspace.yaml",
      ]
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3004"]
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      postgres-db:
        condition: service_healthy
      clickhouse-server:
        condition: service_healthy
      dagster:
        condition: service_healthy
    environment:
      - DAGSTER_HOME=/app/dagster_home
      - DAGSTER_GRPC_SERVER_HOST=dagster # Explicit gRPC host
      - DAGSTER_GRPC_SERVER_PORT=4000 # Explicit gRPC port
    volumes:
      - ./dagster-home:/app/dagster_home
      - ./dagster-pipeline:/app/dagster-pipeline
    networks:
      - data-ops-network
  # dagster
  #
  dagster:
    build:
      context: .
      dockerfile: Dockerfile
    image: dagster
    container_name: dagster
    #command: "dagster api grpc -h 0.0.0.0 -p 4000 -w /app/dagster_home/workspace.yaml"
    command: "dagster api grpc -h 0.0.0.0 -p 4000 -f /app/dagster-pipeline/etl-pipeline.py"
    restart: always
    healthcheck:
      test:
        [
          "CMD",
          "python",
          "-c",
          "import socket; s = socket.socket(); s.connect(('localhost', 4000)); s.close()",
        ]
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      postgres-db:
        condition: service_healthy
      clickhouse-server:
        condition: service_healthy
    environment:
      - DAGSTER_HOME=/app/dagster_home
    volumes:
      - ./dagster-home:/app/dagster_home
      - ./dagster-pipeline:/app/dagster-pipeline
    networks:
      - data-ops-network
  # dagster-daemon
  #
  dagster-daemon:
    build:
      context: .
      dockerfile: Dockerfile
    image: dagster
    container_name: dagster-daemon
    #command: "dagster-daemon run"
    command: "dagster-daemon run -w /app/dagster_home/workspace.yaml" # Shortened flag
    restart: always
    depends_on:
      dagster:
        condition: service_healthy
      postgres-db:
        condition: service_healthy
      clickhouse-server:
        condition: service_healthy
    environment:
      - DAGSTER_HOME=/app/dagster_home
    volumes:
      - ./dagster-home:/app/dagster_home
      - ./dagster-pipeline:/app/dagster-pipeline
    networks:
      - data-ops-network

################################ Networks ############################################
networks:
  data-ops-network:
    external: true # Use the existing network from docker-compose.yml

################################ Volumes ############################################